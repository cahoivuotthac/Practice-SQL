--DE 1--
--1.1--
CREATE DATABASE QLPK
USE QLPK
SET DATEFORMAT DMY

CREATE TABLE PHONGKHAM(
	MAPH CHAR(4) PRIMARY KEY,
	TENPH VARCHAR(50),
	DIACHI VARCHAR(50)
)

CREATE TABLE NHACUNGCAP(
	MANCC CHAR(4) PRIMARY KEY,
	TENNCC VARCHAR(50),
	DIACHI VARCHAR(50)
)

CREATE TABLE THUOC(
	MATHUOC CHAR(4) PRIMARY KEY,
	TENTHUOC VARCHAR(20),
	DVT VARCHAR(5),
	GIATHUOC MONEY,
	MANCC CHAR(4) FOREIGN KEY REFERENCES NHACUNGCAP(MANCC)
)

CREATE TABLE BENHNHAN(
	MABN CHAR(4) PRIMARY KEY,
	HOTEN VARCHAR(50),
	SDT VARCHAR(10),
	NGSINH SMALLDATETIME,
	GIOITINH CHAR(3)
)

CREATE TABLE KHAMBENH(
	MAKB CHAR(10) PRIMARY KEY,
	MAPH CHAR(4) FOREIGN KEY REFERENCES PHONGKHAM(MAPH),
	MABN CHAR(4) FOREIGN KEY REFERENCES BENHNHAN(MABN),
	NGKHAM SMALLDATETIME,
	CHANDOAN VARCHAR(50),
	GHICHU VARCHAR(100)
)

CREATE TABLE DONTHUOC(
	MAKB CHAR(10) FOREIGN KEY REFERENCES KHAMBENH(MAKB),
	MATHUOC CHAR(4) FOREIGN KEY REFERENCES THUOC(MATHUOC),
	SL INT,
	THANHTIEN MONEY,
	PRIMARY KEY(MAKB, MATHUOC)
)

--1.2--
ALTER TABLE NHACUNGCAP
ADD GHICHU VARCHAR(50)

--1.3--
INSERT INTO NHACUNGCAP VALUES('NCC1', 'Pharmacity', 'Vung Tau')
INSERT INTO NHACUNGCAP VALUES('NCC2', 'Hong Hanh', 'SG')

INSERT INTO THUOC VALUES('T001', 'Thuoc a', 'vi', 100000, 'NCC1')
INSERT INTO THUOC VALUES('T002', 'Thuoc B', 'vIEN', 200000, 'NCC2')

--3.1--
SELECT MATHUOC, TENTHUOC, DVT, GIATHUOC, TENNCC
FROM THUOC T JOIN NHACUNGCAP NCC ON T.MANCC = NCC.MANCC
ORDER BY GIATHUOC

--3.2--
SELECT PK.MAPH, SUM(THANHTIEN) AS DOANHTHU
FROM PHONGKHAM PK JOIN KHAMBENH KB ON PK.MAPH = KB.MAPH 
	JOIN DONTHUOC DT ON KB.MAKB = DT.MAKB
WHERE YEAR(NGKHAM) = 2017 
GROUP BY PK.MAPH, MONTH(NGKHAM)

--3.3--
SELECT NCC.MANCC, TENNCC
FROM NHACUNGCAP NCC JOIN THUOC T ON NCC.MANCC = T.MANCC
WHERE GIATHUOC > 30000

--3.4--
SELECT TOP 1 WITH TIES BN.MABN, HOTEN
FROM BENHNHAN BN JOIN KHAMBENH KB ON BN.MABN = KB.MABN
WHERE YEAR(NGKHAM) = 2017
GROUP BY BN.MABN, HOTEN
ORDER BY COUNT(MAKB) DESC 

--3.5--
SELECT BN.MABN, HOTEN
FROM BENHNHAN BN JOIN KHAMBENH KB ON BN.MABN = KB.MABN
WHERE NGKHAM = '1/1/2017' AND MAPH = 'pk1' AND BN.MABN IN(
	SELECT MABN
	FROM KHAMBENH 
	WHERE MAPH = 'pk2' AND NGKHAM = '1/1/2017'
)

--3.6--
SELECT PH.MAPH, TENPH, DIACHI
FROM PHONGKHAM PH
WHERE NOT EXISTS(
	SELECT *
	FROM BENHNHAN
	WHERE GIOITINH = 'Nu' AND YEAR(NGSINH) = 1960 AND NOT EXISTS(
		SELECT *
		FROM KHAMBENH KB
		WHERE KB.MAPH = PH.MAPH AND KB.MABN = KB.MABN
	)
)

--2.1--
ALTER TABLE THUOC
ADD CONSTRAINT CK_GIA
CHECK (GIATHUOC > 0)

--2.2--
ALTER TABLE THUOC
ADD CONSTRAINT CK_DVT
CHECK(DVT IN ('chai', 'hop', 'vien'))


--De 2--
--1.1--
CREATE TABLE BENHVIEN1(
	MABV CHAR(4) PRIMARY KEY,
	TENBV VARCHAR(50),
	DIACHI VARCHAR(50)
)

CREATE TABLE NHASX1(
	MANSX CHAR(4) PRIMARY KEY,
	TENNSX VARCHAR(50),
	DIACHI VARCHAR(50)
)

CREATE TABLE THUOC1(
	MATHUOC CHAR(4) PRIMARY KEY,
	TENTHUOC VARCHAR(20),
	DVT VARCHAR(5),
	GIATHUOC MONEY,
	MANSX CHAR(4) FOREIGN KEY REFERENCES NHASX1(MANSX)
)

CREATE TABLE BENHNHAN1(
	MABN CHAR(4) PRIMARY KEY,
	HOTEN VARCHAR(50),
	SDT VARCHAR(50),
	NGSINH SMALLDATETIME,
	GIOITINH CHAR(3)
)

CREATE TABLE KHAMBENH1(
	MAKB CHAR(10) PRIMARY KEY,
	MABV CHAR(4) FOREIGN KEY REFERENCES BENHVIEN1(MABV),
	MABN CHAR(4) FOREIGN KEY REFERENCES BENHNHAN1(MABN),
	NGKHAM SMALLDATETIME,
	CHANDOAN VARCHAR(50),
	GHICHU VARCHAR(100)
)

CREATE TABLE TOATHUOC1(
	MAKB CHAR(10) FOREIGN KEY REFERENCES KHAMBENH1(MAKB),
	MATHUOC CHAR(4) FOREIGN KEY REFERENCES THUOC1(MATHUOC),
	SL INT,
	TRIGIA MONEY,
	PRIMARY KEY(MAKB, MATHUOC)
)

--1.2--
ALTER TABLE NHASX1
ALTER COLUMN DIACHI VARCHAR(100)

--1.3--

--3.1--
SELECT MATHUOC, TENTHUOC, DVT, GIATHUOC, TENNSX 
FROM THUOC1 T JOIN NHASX1 NSX ON T.MANSX = NSX.MANSX 
ORDER BY GIATHUOC DESC 

--3.2--
SELECT BN.MABN, HOTEN, COUNT(MAKB) AS SOLANKHAM
FROM BENHNHAN1 BN JOIN KHAMBENH1 KB ON BN.MABN = KB.MAKB
WHERE YEAR(NGKHAM) = 2016
GROUP BY BN.MABN, HOTEN, MONTH(NGKHAM)

--3.3--
SELECT NSX.MANSX, TENNSX, DIACHI 
FROM NHASX1 NSX JOIN THUOC1 T ON T.MANSX = NSX.MANSX 
EXCEPT
SELECT NSX.MANSX, TENNSX, DIACHI 
FROM NHASX1 NSX JOIN THUOC1 T ON T.MANSX = NSX.MANSX 
WHERE GIATHUOC > 59000

--3.4--
SELECT TOP 1 WITH TIES BV.MABV, TENBV 
FROM BENHVIEN1 BV JOIN KHAMBENH1 KB ON BV.MABV = KB.MABV
WHERE YEAR(NGKHAM) = 2017 
GROUP BY BV.MABV, TENBV 
ORDER BY COUNT(MABN) DESC 

--3.5--
SELECT BN.MABN, HOTEN 
FROM BENHNHAN1 BN JOIN KHAMBENH1 KB ON BN.MABN = KB.MABN
WHERE MABV = 'bv1' AND YEAR(NGKHAM) = 2017 AND BN.MABN NOT IN(
	SELECT MABN
	FROM KHAMBENH1
	WHERE MABV = 'bv2' AND YEAR(NGKHAM) = 2017
)

--3.6--
SELECT MABV, TENBV, DIACHI
FROM BENHVIEN1 BV
WHERE NOT EXISTS(
	SELECT *
	FROM BENHNHAN1 BN 
	WHERE GIOITINH = 'Nam' AND YEAR(NGSINH) < 1980 AND NOT EXISTS(	
		SELECT *
		FROM KHAMBENH1 KB
		WHERE KB.MABV = BV.MABV AND KB.MABN = BN.MABN
	)
)

--2.1-
ALTER TABLE BENHNHAN1
ADD CONSTRAINT CK_GT
CHECK (GIOITINH IN ('Nam', 'Nu'))

--2.2--
ALTER TABLE TOATHUOC1
ADD CONSTRAINT CK_SL
CHECK (SL > 0)


-- Bổ sung 
--				DE2

--2.3: trigia = sl * giathuoc

--			| THEM | XOA | SUA |
--	TOATHUOC    +     -     +(TRIGIA, SOLUONG)
--	THUOC		-	  -		+(GIATHUOC)

-- TOATHUOC
CREATE TRIGGER TRG_INSERT_TOATHUOC_CAU2
ON TOATHUOC
AFTER INSERT, UPDATE
AS
BEGIN
	DECLARE @SL INT, @MATHUOC CHAR(4), @MAKB CHAR(10);
	DECLARE @GIATHUOC MONEY;
	
	SELECT @SL = SL, @MATHUOC = MATHUOC, @MAKB = MAKB FROM INSERTED;
	SELECT @GIATHUOC = GIATHUOC FROM THUOC
		WHERE MATHUOC = @MATHUOC;
	
	UPDATE TOATHUOC
		SET TRIGIA = @SL * @GIATHUOC
		WHERE MAKB = @MAKB AND MATHUOC = @MATHUOC;
END

-- THUOC
CREATE TRIGGER TRG_UPDATE_THUOC_CAU2
ON THUOC
AFTER UPDATE
AS
BEGIN
	DECLARE @MATHUOC CHAR(4), @GIATHUOC MONEY;

	SELECT @MATHUOC = MATHUOC, @GIATHUOC = GIATHUOC FROM INSERTED;

	UPDATE TOATHUOC
	SET TRIGIA = SL * @GIATHUOC
	WHERE MATHUOC = @MATHUOC;
END
-----------------------------------------------------------------------------------
CREATE TRIGGER R1 ON TOATHUOC FOR INSERT, UPDATE
AS 
	IF EXISTS(SELECT * FROM TOATHUOC T, INSERTED I 
						WHERE T.MATHUOC = I.MATHUOC AND T.TRIGIA != T.SL * I.GIATHUOC)
	BEGIN 
		RAISERROR('Mỗi khi thêm mới hoặc cập nhật số lượng thuốc thì trigai phải được tự động tính lại', 16, 1)
		ROLLBACK TRAN
	END 

CREATE TRIGGER R2 ON THUOC FOR UPDATE
AS 
	IF UPDATE(GIATHUOC)
		IF EXISTS(SELECT * FROM TOATHUOC T, INSERTED I 
							WHERE T.MATHUOC = I.MATHUOC AND T.TRIGIA != T.SL * I.GIATHUOC)
		BEGIN 
			RAISERROR('Mỗi khi thêm mới hoặc cập nhật số lượng thuốc thì trigai phải được tự động tính lại', 16, 1)
			ROLLBACK TRAN
		END 
